/*
 * This file is generated by jOOQ.
 */
package ru.ashirobokov.library.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ru.ashirobokov.library.jooq.tables.Authors;
import ru.ashirobokov.library.jooq.tables.AuthorsBooks;
import ru.ashirobokov.library.jooq.tables.Books;
import ru.ashirobokov.library.jooq.tables.records.AuthorsBooksRecord;
import ru.ashirobokov.library.jooq.tables.records.AuthorsRecord;
import ru.ashirobokov.library.jooq.tables.records.BooksRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>book_library</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AuthorsRecord, Long> IDENTITY_AUTHORS = Identities0.IDENTITY_AUTHORS;
    public static final Identity<BooksRecord, Long> IDENTITY_BOOKS = Identities0.IDENTITY_BOOKS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorsRecord> KEY_AUTHORS_PRIMARY = UniqueKeys0.KEY_AUTHORS_PRIMARY;
    public static final UniqueKey<AuthorsBooksRecord> KEY_AUTHORS_BOOKS_PRIMARY = UniqueKeys0.KEY_AUTHORS_BOOKS_PRIMARY;
    public static final UniqueKey<BooksRecord> KEY_BOOKS_PRIMARY = UniqueKeys0.KEY_BOOKS_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthorsBooksRecord, AuthorsRecord> FK_AUTHOR_IN_AUTHOR_BOOK = ForeignKeys0.FK_AUTHOR_IN_AUTHOR_BOOK;
    public static final ForeignKey<AuthorsBooksRecord, BooksRecord> FK_BOOK_IN_AUTHOR_BOOK = ForeignKeys0.FK_BOOK_IN_AUTHOR_BOOK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AuthorsRecord, Long> IDENTITY_AUTHORS = Internal.createIdentity(Authors.AUTHORS, Authors.AUTHORS.ID);
        public static Identity<BooksRecord, Long> IDENTITY_BOOKS = Internal.createIdentity(Books.BOOKS, Books.BOOKS.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AuthorsRecord> KEY_AUTHORS_PRIMARY = Internal.createUniqueKey(Authors.AUTHORS, "KEY_authors_PRIMARY", Authors.AUTHORS.ID);
        public static final UniqueKey<AuthorsBooksRecord> KEY_AUTHORS_BOOKS_PRIMARY = Internal.createUniqueKey(AuthorsBooks.AUTHORS_BOOKS, "KEY_authors_books_PRIMARY", AuthorsBooks.AUTHORS_BOOKS.AUTHOR_ID, AuthorsBooks.AUTHORS_BOOKS.BOOK_ID);
        public static final UniqueKey<BooksRecord> KEY_BOOKS_PRIMARY = Internal.createUniqueKey(Books.BOOKS, "KEY_books_PRIMARY", Books.BOOKS.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AuthorsBooksRecord, AuthorsRecord> FK_AUTHOR_IN_AUTHOR_BOOK = Internal.createForeignKey(ru.ashirobokov.library.jooq.Keys.KEY_AUTHORS_PRIMARY, AuthorsBooks.AUTHORS_BOOKS, "fk_author_in_author_book", AuthorsBooks.AUTHORS_BOOKS.AUTHOR_ID);
        public static final ForeignKey<AuthorsBooksRecord, BooksRecord> FK_BOOK_IN_AUTHOR_BOOK = Internal.createForeignKey(ru.ashirobokov.library.jooq.Keys.KEY_BOOKS_PRIMARY, AuthorsBooks.AUTHORS_BOOKS, "fk_book_in_author_book", AuthorsBooks.AUTHORS_BOOKS.BOOK_ID);
    }
}
